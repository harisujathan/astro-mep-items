/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.BufferedReader;
import java.io.*;
import java.util.*;
import java.io.InputStreamReader;
import java.text.SimpleDateFormat;
import java.util.StringTokenizer;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.tree.*;
import javax.swing.plaf.basic.BasicTreeUI.*;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.StyledDocument;

/**
 *
 * @author hari
 */
public class NewJDialog extends javax.swing.JDialog {

    /**
     * Creates new form NewJDialog
     */
    public NewJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree5 = new javax.swing.JTree();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTree6 = new javax.swing.JTree();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTree7 = new javax.swing.JTree();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane5.setViewportView(jTextPane1);

        jTree5.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree5ValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jTree5);

        jTree6.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree6ValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(jTree6);

        jTree7.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree7ValueChanged(evt);
            }
        });
        jScrollPane8.setViewportView(jTree7);

        jRadioButton1.setText("sun-moo-mar");
        jRadioButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton1MouseClicked(evt);
            }
        });
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("mer-ven-jup");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setText("sat-rah-ket");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jTextField1.setColumns(9);

        jTextField2.setColumns(9);

        jTextField3.setColumns(9);

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel1.setToolTipText("");

        jButton2.setText("clear");
        jButton2.setToolTipText("");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Switch Strict");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Switch Moo");
        jButton4.setEnabled(false);

        jTextField4.setColumns(9);
        jTextField4.setEnabled(false);

        jButton5.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        jButton5.setText("ayan change");
        jButton5.setEnabled(false);

        jButton7.setText("snapshot");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(44, 44, 44))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jRadioButton2)
                                .addComponent(jRadioButton1)
                                .addComponent(jRadioButton3)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButton2))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton5))
                                .addComponent(jButton4)
                                .addComponent(jButton3))
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7)
                            .addComponent(jLabel2))
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane5)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                            .addComponent(jScrollPane8)
                            .addComponent(jScrollPane7))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static String choice = "sun";
    public static String s1 = "";
    public static String s2 = "";
    public static String s3 = "";
    //public static boolean strict = true;
    static NewJDialog dialog;
    //public static String file = "DasasR";
    public static String fileSuff = "";
    public static boolean dobAtrset=false;
    public static String dobAtr="";
    private void jRadioButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton1MouseClicked
        // TODO add your handling code here:
        choice = "sun";
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(false);
        dialog.pack();
        dialog.setVisible(true);
        dialog.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ddest2();
                ddest();
            }
        });
    }//GEN-LAST:event_jRadioButton1MouseClicked

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        choice = "mer";
        jRadioButton1.setSelected(false);
        jRadioButton3.setSelected(false);
        dialog.pack();
        dialog.setVisible(true);
        dialog.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ddest2();
                ddest();
            }
        });
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
        choice = "sat";
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
        dialog.pack();
        dialog.setVisible(true);
        dialog.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ddest2();
                ddest();
            }
        });
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dialog.pack();
        dialog.setVisible(true);
        dialog.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        s1 = dialog.jTextField1.getText();
        s2 = dialog.jTextField2.getText();
        s3 = dialog.jTextField3.getText();
        ddest();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jLabel1.setText("search: "+s1+":"+s2+":"+s3+".");
                ddest2();
                ddest();
//                ddest();
            }
        });
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTree5ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree5ValueChanged
        // TODO add your handling code here:
        if(evt==null) return;
//        System.out.println("__"+evt.getPath().toString().length());
        ddest3(evt.getPath().toString().substring(1,4),evt.getPath().toString().substring(5,evt.getPath().toString().length()-1));
//        ddest();
//        System.out.println(":"+evt.getPath().toString().substring(6,evt.getPath().toString().length()-1)+":");
        jLabel1.setText(evt.getPath().toString().substring(1,evt.getPath().toString().length()-1));
    }//GEN-LAST:event_jTree5ValueChanged

    private void jTree7ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree7ValueChanged
        // TODO add your handling code here:
        if(evt==null) return;
        ddest3(evt.getPath().toString().substring(1,4),evt.getPath().toString().substring(5,evt.getPath().toString().length()-1));
//        ddest();
        
        jLabel1.setText(evt.getPath().toString().substring(1,evt.getPath().toString().length()-1));
    }//GEN-LAST:event_jTree7ValueChanged

    private void jTree6ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree6ValueChanged
        // TODO add your handling code here:
        if(evt==null) return;
        ddest3(evt.getPath().toString().substring(1,4),evt.getPath().toString().substring(5,evt.getPath().toString().length()-1));
//        ddest();
        jLabel1.setText(evt.getPath().toString().substring(1,evt.getPath().toString().length()-1));
    }//GEN-LAST:event_jTree6ValueChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dialog.pack();
        dialog.setVisible(true);
        dialog.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
//        dialog.jTextField1.setText("");
//        dialog.jTextField2.setText("");
//        dialog.jTextField3.setText("");
        s1 = "";//dialog.jTextField1.getText();
        s2 = "";//dialog.jTextField2.getText();
        s3 = "";//dialog.jTextField3.getText();
        //dialog.jLabel1.setText("");
        ddest();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jTextField1.setText("");
                jTextField2.setText("");
                jTextField3.setText("");
                jLabel1.setText("");
                ddest2();
                ddest();
//                ddest();
            }
        });
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        File f1= new File("snapshot.txt");
        File f2= new File("snapshot.html");
        try{
            if(!f1.exists())f1.createNewFile();
            if(!f2.exists())f1.createNewFile();
            PrintWriter p1=new PrintWriter(new FileWriter(f1,true));
            PrintWriter p2=new PrintWriter(new FileWriter(f2,true));
            p2.println("<html><body>");
            SimpleDateFormat sdf= new SimpleDateFormat("yyyy-MM-dd-HH-mm-ss");
            Date dt= new Date();
            p1.println("\n\n----------"+sdf.format(dt)+"----------"+dobAtr+"----------");
            p1.println(jLabel1.getText());
            p1.println(jTextPane1.getText());
            p2.println("<br/><br/><font size=-1>\n\n----------"+sdf.format(dt)+"--------"+dobAtr+"--------</font>".replace("\n", "\n<br/>"));
            p2.println("<br/><b>"+jLabel1.getText()+"</b>");
//            if(jLabel1.getText().length()==0) {
//                if(jTextField1.getText().length()>0){
//                    p2.println("<br/><p>search1:"+jTextField1.getText()+"</p>");
//                    p1.println("search1:"+jTextField1.getText()+"");
//                }
//                if(jTextField2.getText().length()>0){
//                    p2.println("<br/><p>search2:"+jTextField2.getText()+"</p>");
//                    p1.println("search2:"+jTextField2.getText()+"");
//                }
//                if(jTextField3.getText().length()>0){
//                    p2.println("<br/><p>search2:"+jTextField3.getText()+"</p>");
//                    p1.println("search3:"+jTextField3.getText()+"");
//
//                }
//            }
            p2.println("<br/><font size=-2>"+jTextPane1.getText().replace("\n", "\n<br/>")+"</font>");
            p1.close();
            p2.close();
            
            
            
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    static int y1, y2;
    static boolean strict=true;

    public static void main(String args[]) {
        if (args.length > 0) {
            fileSuff = args[0];
        }
        if (args.length > 1) {
            if(!args[1].startsWith("t"))strict=false;
        }
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dialog = new NewJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }

                });

//                BasicTreeUI.TreeSelectionHandler th= new BasicTreeUI.TreeSelectionHandler();
//                    dialog.jTree5.addTreeSelectionListener(new BasicTreeUI.{
//        
//    });
                ddest2();
                ddest();
            }
        });

    }


   public static boolean t(String line){
       return true;
/*
       int i=line.indexOf(" d");
       int j=line.indexOf("-d");
       int k=line.indexOf(",",j);
       if(k==-1)k=line.indexOf("N",j);
       boolean r=false;
       if(strict) if( line.substring(i+1,j).equals(line.substring(j+1,k)) )
          r= true;
          else r= false;
       else r= true;
       return r;
       */ 

   }

    public static void ddest2() {
        try {
            BufferedReader br1 = new BufferedReader(new InputStreamReader(new FileInputStream("Meps"+fileSuff)));
            String line = "", str = "";
            while ((line = br1.readLine()) != null) {
                if (line.contains(",") || line.contains("Nmoo") || line.contains("Nmer") || line.contains("Nmar") || line.contains("Nven") || line.contains("Njup")|| line.contains("Nrah")  || line.contains("Nsat")) {
                    if ((line.contains(s1)) && (line.contains(s2)) && (line.contains(s3) && t(line))) {
                        str += line + "\n";
                    }
                }
            }
            br1.close();
//                     StyledDocument sd = new DefaultStyledDocument();
//                     sd.insertString(0, str, null);
//                     dialog.jTextPane1=new JTextPane(sd);
            dialog.jTextPane1.setText(str);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public static void ddest3(String pre,String lab) {
//        System.out.println("--"+lab+"--");
        try {
            ArrayList<String> as= new ArrayList<String>();
           // if(strict){
                if(pre.equals("Rah"))
                   pre="rah";
                if(pre.equals("Ket"))
                   pre="rah";
                if(pre.equals("Sun"))
                    pre=",";
                else
                    pre="N"+pre.toLowerCase();
            //}else pre=" ";
            String[] sts=new String[7];
            StringTokenizer stk=new StringTokenizer(lab,",");
            int i=0;
            while((stk.hasMoreTokens())){
                sts[i]=stk.nextToken().substring(1,4); 
                if(sts[i].equals("Rah"))sts[i]="Rah";
//                System.out.print(":"+sts[i]+":");
                i++;
            }
//            System.out.println("=="+pre+"==");
            String str = "";
            for(i=1;i<7;i++){
                BufferedReader br1 = new BufferedReader(new InputStreamReader(new FileInputStream("Meps"+fileSuff)));
                            String line = "";
                while ((line = br1.readLine()) != null) {
                    if(sts[i]==null || sts[i].length()==0){
                        if(i==1){
                            if(sts[0].length()>0 && line.contains(sts[0]) && line.contains("Asc") &&line.contains(pre) && t(line))
                            {
                                   if(!as.contains(line))
                                       as.add(line);
//                                str += line + "\n";
                            }
                           if((line.contains(sts[0])&& line.indexOf(sts[0],line.indexOf(sts[0])+1)>0)&&line.contains(pre)&& t(line))
                            {
                                   if(!as.contains(line))
                                       as.add(line);
//                            str += line + "\n";
                             }
                            
                        }
                        continue;
                    }
                    if((line.contains(sts[i])&& line.indexOf(sts[i],line.indexOf(sts[i])+1)>0)&&line.contains(pre)&& t(line))
                    {
                                   if(!as.contains(line))
                                       as.add(line);
//                            str += line + "\n";
                    }else
                    if(sts[i].equals(sts[i-1])){
                        if(line.contains(sts[i]) && line.contains("Asc")&&line.contains(pre)&& t(line))
                                   if(!as.contains(line))
                                       as.add(line);
//                            str += line + "\n";
                    }else
                    if (((line.contains(sts[i]) && line.contains(sts[i-1]))||(line.contains("Asc") && line.contains(sts[i-1]))||(line.contains(sts[i]) && line.contains("Asc")))&&line.contains(pre)&& t(line)) {
                        
                                   if(!as.contains(line))
                                       as.add(line);
                            
//                            str += line + "\n";
                    }
                }
                br1.close();
            }
            for(String st:as){
                str+=st+"\n";
            }
//                     StyledDocument sd = new DefaultStyledDocument();
//                     sd.insertString(0, str, null);
//                     dialog.jTextPane1=new JTextPane(sd);
            dialog.jTextPane1.setText(str);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public static void ddest() {
        /*try {
            BufferedReader br1 = new BufferedReader(new InputStreamReader(new FileInputStream("Meps"+fileSuff)));
            String line = "", str = "";
            while ((line = br1.readLine()) != null) {
                if (line.contains(",") || line.contains("Nmoo") || line.contains("Nmer") || line.contains("Nmar") || line.contains("Nven") || line.contains("Njup") || line.contains("Nrah")   || line.contains("Nsat")) {
                    if ((line.contains(s1)) && (line.contains(s2)) && (line.contains(s3))&& t(line)) {
                        str += line + "\n";
                    }
                }
            }
            br1.close();
//                     StyledDocument sd = new DefaultStyledDocument();
//                     sd.insertString(0, str, null);
//                     dialog.jTextPane1=new JTextPane(sd);
            dialog.jTextPane1.setText(str);

        } catch (Exception e) {
            e.printStackTrace();
        }*/
        
        
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Root");
        DefaultMutableTreeNode root1 = null;
        DefaultMutableTreeNode root2 = null;
        DefaultMutableTreeNode root3 = null;
        //create the child nodes
        DefaultMutableTreeNode child1 = new DefaultMutableTreeNode("Child 1");
        DefaultMutableTreeNode child2 = new DefaultMutableTreeNode("Child 2");
        for (int i = 0; i < 100; i++) {
            root.add(new DefaultMutableTreeNode("Child -" + i));
        }
        root.add(child1);
        root.add(child2);
        try {
            BufferedReader br1 = new BufferedReader(new InputStreamReader(new FileInputStream("DasasR"+fileSuff)));
            String line = "", fl = "", FL2 = "", FL3 = "", FL4 = "";
            DefaultMutableTreeNode lev1 = new DefaultMutableTreeNode("");
            DefaultMutableTreeNode lev2 = new DefaultMutableTreeNode("");//null;
            DefaultMutableTreeNode lev3 = new DefaultMutableTreeNode("");//null;
            DefaultMutableTreeNode childa = new DefaultMutableTreeNode("");//null;
            DefaultMutableTreeNode childb = new DefaultMutableTreeNode("");//null;
            DefaultMutableTreeNode childc = new DefaultMutableTreeNode("");//null;
            DefaultMutableTreeNode childd = new DefaultMutableTreeNode("");//null;
            String slab = "", stemp = "";
            while ((line = br1.readLine()) != null) {
                if(!dobAtrset){
                    if(line.contains(" dasa")){
                        StringTokenizer stk= new StringTokenizer(line);
                        stk.nextToken();stk.nextToken();stk.nextToken();stk.nextToken();stk.nextToken();
                        String dt=stk.nextToken();
                        dt+=" "+stk.nextToken();
                        dt+=" "+stk.nextToken();
                        dialog.jLabel2.setText(dt);
                        dobAtr=dt;
                        dobAtrset=true;
                    }
                }
                if (line.startsWith("sun-")) {
                    stemp = line;
                }
                if (choice.equals("sun")) {
                    if (line.contains("SUN VD")) {
                        fl = "sun";
                        slab += stemp + " - Sun\n";
                        root1 = new DefaultMutableTreeNode("Sun");
                    } else if (line.contains("MOO VD")) {
                        fl = "moo";
                        slab += stemp + " - Moo\n";
                        root2 = new DefaultMutableTreeNode("Moo");
                    } else if (line.contains("MAR VD")) {
                        fl = "mar";
                        slab += stemp + " - Mar";
                        root3 = new DefaultMutableTreeNode("Mar");
                    } else if (line.contains("VD")) {
                        fl = "";
                    }
                } else if (choice.equals("mer")) {
                    if (line.contains("MER VD")) {
                        fl = "mer";
                        slab += stemp + " - Mer\n";
                        root1 = new DefaultMutableTreeNode("Mer");
                    } else if (line.contains("JUP VD")) {
                        fl = "jup";
                        slab += stemp + " - Jup\n";
                        root2 = new DefaultMutableTreeNode("Jup");
                    } else if (line.contains("VEN VD")) {
                        fl = "ven";
                        slab += stemp + " - Ven";
                        root3 = new DefaultMutableTreeNode("Ven");
                    } else if (line.contains("VD")) {
                        fl = "";
                    }
                } else if (choice.equals("sat")) {
                    if (line.contains("SAT VD")) {
                        fl = "sat";
                        slab += stemp + " - Sat\n";
                        root1 = new DefaultMutableTreeNode("Sat");
                    } else if (line.contains("RAH VD")) {
                        fl = "rah";
                        slab += stemp + " - Rah\n";
                        root2 = new DefaultMutableTreeNode("Rah");
                    } else if (line.contains("KET VD")) {
                        fl = "ket";
                        slab += stemp + " - Ket";
                        root3 = new DefaultMutableTreeNode("Ket");
                    } else if (line.contains("VD")) {
                        fl = "";
                    }
                }

                if (fl.equals("")) {
                    continue;
                }
                if (line.startsWith("Sun") || line.startsWith("Moo") || line.startsWith("Mar") || line.startsWith("Mer") || line.startsWith("Ven") || line.startsWith("Jup") || line.startsWith("Sat") || line.startsWith("Rah") || line.startsWith("Ket")) {
                    FL2 = line.substring(0, 3);
                    if (line.indexOf("*") > 0) {
                        int k1 = line.indexOf("*");
                        int k2 = line.indexOf("-", k1 + 1);
                        int k3 = line.indexOf(":", k2 + 1);
                        int k4 = line.indexOf("-", k3 + 1);
                        String y1 = line.substring(k1 + 1, k2+3).trim();
                        String y2 = line.substring(k3 + 1, k4+3).trim();
//                                DefaultMutableTreeNode childa = new DefaultMutableTreeNode("Sun " + y1 + ":" + y2);
                        lev1 = new DefaultMutableTreeNode(FL2 + " " + y1 + " :: " + y2);
                        if (fl.equals("sun")) {
                            root1.add(lev1);
                        }
                        if (fl.equals("moo")) {
                            root2.add(lev1);
                        }
                        if (fl.equals("mar")) {
                            root3.add(lev1);
                        }
                        if (fl.equals("mer")) {
                            root1.add(lev1);
                        }
                        if (fl.equals("jup")) {
                            root2.add(lev1);
                        }
                        if (fl.equals("ven")) {
                            root3.add(lev1);
                        }
                        if (fl.equals("sat")) {
                            root1.add(lev1);
                        }
                        if (fl.equals("rah")) {
                            root2.add(lev1);
                        }
                        if (fl.equals("ket")) {
                            root3.add(lev1);
                        }
                    }

                }

                if (line.startsWith("    Sun") || line.startsWith("    Moo") || line.startsWith("    Mar") || line.startsWith("    Mer") || line.startsWith("    Ven") || line.startsWith("    Jup") || line.startsWith("    Sat") || line.startsWith("    Rah") || line.startsWith("    Ket")) {
                    if (line.indexOf("*") > 0) {
                        int k1 = line.indexOf("*");
                        int k2 = line.indexOf("-", k1 + 1);
//                                int k22 = line.indexOf("-", k2 + 1);
                        int k3 = line.indexOf(":", k2 + 1);
                        int k4 = line.indexOf("-", k3 + 1);
//                                int k44 = line.indexOf("-", k4 + 1);
                        String y1 = line.substring(k1 + 1, k2 + 6).trim();
                        String y2 = line.substring(k3 + 1, k4 + 6).trim();
//                                int y1 = Integer.parseInt(line.substring(k1 + 1, k2).trim());
//                                int y2 = Integer.parseInt(line.substring(k3 + 1, k4).trim());
                        childa = new DefaultMutableTreeNode(line.substring(4, 7) + " " + y1 + " :: " + y2);
//                                if(FL2.equals("Sun"))
//                                    lev1.add(childa);
//                                if(FL2.equals("Moo"))
//                                    lev1.add(childa);
//                                if(FL2.equals("Mar"))
                        lev1.add(childa);
                    }

                }

                if (line.startsWith("        Sun") || line.startsWith("        Moo") || line.startsWith("        Mar") || line.startsWith("        Mer") || line.startsWith("        Ven") || line.startsWith("        Jup") || line.startsWith("        Sat") || line.startsWith("        Rah") || line.startsWith("        Ket")) {
                    if (line.indexOf("*") > 0) {
                        int k1 = line.indexOf("*");
                        int k2 = line.indexOf("-", k1 + 1);
                        int k3 = line.indexOf(":", k2 + 1);
                        int k4 = line.indexOf("-", k3 + 1);
                        String y1 = line.substring(k1 + 1, k2 + 6).trim();
                        String y2 = line.substring(k3 + 1, k4 + 6).trim();
                        childb = new DefaultMutableTreeNode(line.substring(8, 11) + " " + y1 + " :: " + y2);
                        childa.add(childb);
                    }

                }

                if (line.startsWith("            Sun") || line.startsWith("            Moo") || line.startsWith("            Mar") || line.startsWith("            Mer") || line.startsWith("            Ven") || line.startsWith("            Jup") || line.startsWith("            Sat") || line.startsWith("            Rah") || line.startsWith("            Ket")) {
                    if (line.indexOf("*") > 0) {
                        int k1 = line.indexOf("*");
                        int k2 = line.indexOf("-", k1 + 1);
                        int k3 = line.indexOf(":", k2 + 1);
                        int k4 = line.indexOf("-", k3 + 1);
                        String y1 = line.substring(k1 + 1, k2 + 12).trim();
                        String y2 = line.substring(k3 + 1, k4 + 12).trim();
                        childc = new DefaultMutableTreeNode(line.substring(12, 15) + " " + y1 + " :: " + y2);
                        childb.add(childc);
                    }

                }

                if (line.startsWith("                Sun") || line.startsWith("                Moo") || line.startsWith("                Mar") || line.startsWith("                Mer") || line.startsWith("                Ven") || line.startsWith("                Jup") || line.startsWith("                Sat") || line.startsWith("                Rah") || line.startsWith("                Ket")) {
                    if (line.indexOf("*") > 0) {
                        int k1 = line.indexOf("*");
                        int k2 = line.indexOf("-", k1 + 1);
                        int k3 = line.indexOf(":", k2 + 1);
                        int k4 = line.indexOf("-", k3 + 1);
                        String y1 = line.substring(k1 + 1, k2 + 12).trim();
                        String y2 = line.substring(k3 + 1, k4 + 12).trim();
                        childd = new DefaultMutableTreeNode(line.substring(16, 19) + " " + y1 + " :: " + y2);
                        childc.add(childd);
                    }

                }


                
            }
            br1.close();
            dialog.jTextArea1.setText(slab);

        } catch (Exception e) {
            e.printStackTrace();
        }

        DefaultTreeModel model;
        DefaultTreeModel model1 = (DefaultTreeModel) dialog.jTree5.getModel();
        model1.setRoot(root1);
        DefaultTreeModel model2 = (DefaultTreeModel) dialog.jTree6.getModel();
        model2.setRoot(root2);
        DefaultTreeModel model3 = (DefaultTreeModel) dialog.jTree7.getModel();
        model3.setRoot(root3);
        dialog.pack();
        dialog.show();
        dialog.setVisible(true);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTree jTree5;
    private javax.swing.JTree jTree6;
    private javax.swing.JTree jTree7;
    // End of variables declaration//GEN-END:variables
}
